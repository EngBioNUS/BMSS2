import matplotlib.pyplot as plt
from   numba             import jit

import setup_bmss            as lab
import BMSS.models.setup_sim as sm
import BMSS.models.setup_sen as ss
import BMSS.simulation       as sim
import BMSS.sensitivityanalysis as sn

'''
Tutorial 3 Part 1: Setting Up
- Learn how to use .ini files to manage sensitivity settings
'''

plt.style.use(lab.styles['dark_style'])
plt.close('all')

if __name__ == '__main__':
    '''
    Just like in the previous tutorial, we can create .ini files to store the settings
    for our analysis separately from the algorithms we code.
    '''
    system_types_settings_names = [('BMSS, Monod, Constitutive, Single, ProductInhibition', None),
                                   ]
    
    ss.make_settings_template(system_types_settings_names, filename='settings_sen_template.ini')
    
    '''
    How does this file compare to a template generated by the one in setup_sim? Let's create a file using setup_sim.make_settings_template and compare them.
    '''
    sm.make_settings_template(system_types_settings_names, filename='settings_sim_template.ini')
    
    
    '''
    After observing the two files, we see that they are highly similar. However,
    the file for sensitivity analysis has an additional field for specifying which 
    parameters we want to fix. The commonality between the two files allows us to
    reuse settings simply by copying and pasting them according to our needs.
    '''

    config_data = ss.from_config('settings_sen_1.ini')
    
    